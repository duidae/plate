# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache the dependencies for building
      - restore_cache:
          keys:
          - v1-dependencies-build-{{ checksum "yarn.lock" }}
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-build-{{ checksum "yarn.lock" }}
      - run: SOCKETIO_PORT=3030 make build-keystone-plugin
      - run: rm -rf node_modules

      # Download and cache the dependencies for running
      - restore_cache:
          keys:
            - v1-dependencies-runtime-{{ checksum "yarn.lock" }}
      - run: yarn install --production
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-runtime-{{ checksum "yarn.lock" }}

      - run:
          name: Save pkg version to a file
          command: node ./.circleci/scripts/read-changelog.js > .pkg-version

      - persist_to_workspace:
          root: ~/repo
          paths:
            - ./*
  push:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/repo
    steps:
      - setup_remote_docker

      - attach_workspace:
          at: .

      - run:
          name: Connect to container cluster
          command: |
            # GOOGLE_AUTH, GOOGLE_PROJECT_ID, GOOGLE_COMPUTE_ZONE,
            # GOOGLE_PREVIEW_CLUSTER_NAME, GOOGLE_STAGING_CLUSTER_NAME
            # and GOOGLE_CLUSTER_NAME is defined in Environment Variables of circleci project
            echo ${GOOGLE_AUTH} | base64 -i --decode > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            CLUSTER_NAME=""

            if [ "${CIRCLE_BRANCH}" == "release" ]; then
              CLUSTER_NAME=${GOOGLE_CLUSTER_NAME}
            fi

            echo "CLUSTER_NAME: ${CLUSTER_NAME}"
            gcloud --quiet container clusters get-credentials $CLUSTER_NAME

      - run:
          name: Build and push Docker image
          command: |
            PKG_VER="$(cat .pkg-version)-$CIRCLE_BUILD_NUM"

            if [ "${CIRCLE_BRANCH}" == "release" ]; then
              PKG_VER="$(cat .pkg-version)"
            fi

            echo "PKG_VER: ${PKG_VER}"

            # gcs key file
            echo ${GCS_KEY_FILE} | base64 -i --decode > gcskeyfile.json

            docker build -t gcr.io/coastal-run-106202/keystone-plate:$CIRCLE_BRANCH-$PKG_VER .
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
            docker push gcr.io/coastal-run-106202/keystone-plate:$CIRCLE_BRANCH-$PKG_VER

workflows:
  version: 2
  build_and_push:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - release
      - push:
          requires:
            - build
          filters:
            branches:
              only:
                - release
